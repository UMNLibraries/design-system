main form {
  margin-bottom: calc(var(--m-norm) * 1rem);
}

fieldset {
  padding: 0 1rem 1rem;
  border: 2px solid var(--col-bg-medium);
  position: relative;
  margin-bottom: calc(var(--m-norm) * 1rem);
}

fieldset > legend {
  font-weight: bold;
  padding: 0;
}

button, input {
  overflow: visible;
}

button, input, optgroup, select, textarea {
  font-family: inherit;
  font-size: inherit;
  color: inherit;
  border-radius: 0;
  -webkit-appearance: none;
}

label {
  display: block;
  font-weight: bold;
}

.input:focus + label,
.input:hover + label {
  color: var(--col-link);
}

/* invalid, error, other feedback styles */
input[aria-invalid='true'], textarea[aria-invalid='true'] {
  border-color: var(--col-mes-danger-dark);
}

input[aria-invalid='false'], textarea[aria-invalid='false'] {
  border-color: var(--col-mes-success-dark);
}

/* checkboxes and radio buttons */
[type="checkbox"], [type="radio"] {
  padding: 0;
  opacity: 0;
}

[type="checkbox"] + label, [type="radio"] + label {
  position: relative;
  padding: 0 3rem 0 2rem;
  font-weight: normal;
}

input[disabled] + label::before,
input[type="checkbox"][disabled] + label::before,
input[type="radio"][disabled] + label::before,
input[disabled]:hover + label::before,
input[type="checkbox"][disabled]:hover + label::before,
input[type="radio"][disabled]:hover + label::before,
input[disabled]:focus + label::before,
input[type="checkbox"][disabled]:focus + label::before,
input[type="radio"][disabled]:focus + label::before {
  border: 0;
  cursor: not-allowed;
  outline: none;
}

[type="checkbox"] + label::before,
[type="radio"] + label::before {
  height: 22px;
  width: 22px;
  left: 0;
  top: 1px;
  background: var(--col-bg-medium);
  border: 1px solid var(--col-bg-med-dark);
}

[type="checkbox"]:hover + label::before,
[type="radio"]:hover + label::before,
[type="checkbox"]:focus + label::before,
[type="radio"]:focus + label::before {
  border: 0.2rem solid var(--col-link);
}

[type="checkbox"][aria-invalid="false"]:hover + label::before,
[type="radio"][aria-invalid="false"]:hover + label::before,
[type="checkbox"][aria-invalid="false"]:focus + label::before,
[type="radio"][aria-invalid="false"]:focus + label::before {
  border: 0.2rem solid var(--col-mes-success-dark);
}

[type="checkbox"][aria-invalid="true"]:hover + label::before,
[type="radio"][aria-invalid="true"]:hover + label::before,
[type="checkbox"][aria-invalid="true"]:focus + label::before,
[type="radio"][aria-invalid="false"]:focus + label::before {
  border: 0.2rem solid var(--col-mes-danger-dark);
}

[type="radio"] + label::before {
  border-radius: 50%;
}

[type="checkbox"] + label::before,
[type="checkbox"] + label::after,
[type="radio"] + label::before,
[type="radio"] + label::after {
  position: absolute;
  content: '';
  display: inline-block;
}

[type="radio"] + label::after {
  left: 4px;
  top: 5px;
  width: 13px;
  height: 13px;
  border: 7px solid var(--col-text);
  border-radius: 50%;
  content: none;
}

[type="radio"]:checked + label::after {
  content: '';
}

[type="checkbox"]:checked + label::before {
  background-color: var(--col-text);
}

[type="checkbox"]:checked + label::after {
  left: 7px;
  top: 3px;
  width: 8px;
  height: 14px;
  border: solid #fff;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

/* matrix */
table[role="presentation"] [type="checkbox"] + label,
table[role="presentation"] [type="radio"] + label {
  position: absolute;
  top: 0.5rem;
}

table[role="presentation"] [type="checkbox"],
table[role="presentation"] [type="radio"],
table[role="presentation"] [type="radio"],
table[role="presentation"] [type="radio"] {
  display: block;
  height: 100%;
}

table[role="presentation"] tbody td {
  position: relative;
}

table[role="presentation"] input[type="radio"] + label > span,
table[role="presentation"] input[type="checkbox"] + label > span {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

@media (max-width: 50rem) {
  table[role="presentation"] thead {
    display: none;
    top: 0;
  }

  table[role="presentation"] tbody {
    width: 100%;
    margin-left: 0;
  }

  table[role="presentation"] [type="checkbox"] + label,
  table[role="presentation"] [type="radio"] + label {
    position: relative;
  }

  table[role="presentation"] input[type="radio"] + label > span:last-of-type,
  table[role="presentation"] input[type="checkbox"] + label > span:last-of-type {
    position: relative;
    overflow: auto;
    clip: auto;
    height: auto;
    width: auto;
    margin: auto;
    display: block;
  }
}

/* textareas and text inputs */
[type="text"],
[type="search"],
[type="email"],
[type="number"],
[type="password"],
[type="tel"],
[type="url"],
textarea {
  width: 100%;
  max-width: 100%;
  padding: 0.75rem 1ch;
  margin: 0.3rem 0;
  border: 1px solid var(--col-bg-med-dark);
  border-radius: 0; /* for browsers that default to round inputs */
  -webkit-appearance: none; /* for older Safari browsers */
  font-size: 1rem;
  /*transition: all 0.15s ease;*/
}

textarea {
  min-height: 8rem;
  overflow: auto;
  /*transition: all 0.15s ease;*/
}

/* select */
select {
  background: #fff url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right .75rem center/12px 14px;
  background-size: 12px 14px;
  height: calc(2.875rem + 2px);
  padding: 0.5rem calc(15px + 1rem) 0.5rem 1rem;
  font-size: 1rem;
  display: inline-block;
  width: 100%;
  vertical-align: middle;
  border: 1px solid #333;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
}

main select {
  margin: 0 0 calc(var(--m-norm) * 1rem) 0;
}

select.btn-ghost {
  /* need this because gulp compresses background-color to background and kills the image */
  background: var(--col-bg-medium) url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right .75rem center/12px 14px;
  padding: 0.5rem calc(15px + 1rem) 0.5rem 1rem;
}

select.btn-ghost:active,
select.btn-ghost:hover,
select.btn-ghost:focus {
  /* need this because gulp compresses background-color to background and kills the image */
  background: var(--col-bg-light) url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right .75rem center/12px 14px;
}

select.btn-primary {
  /* need this because gulp compresses background-color to background and kills the image */
  background: var(--col-primary) url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23fafafa' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right .75rem center/12px 14px;
  padding: 0.5rem calc(15px + 1rem) 0.5rem 1rem;
  color: white;
}

select.btn-primary:active,
select.btn-primary:hover,
select.btn-primary:focus {
  /* need this because gulp compresses background-color to background and kills the image */
  background: var(--col-primary-dark) url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23fafafa' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right .75rem center/12px 14px;
}

select.btn-secondary {
  /* need this because gulp compresses background-color to background and kills the image */
  background: var(--col-secondary-light) url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right .75rem center/12px 14px;
  padding: 0.5rem calc(15px + 1rem) 0.5rem 1rem;
}

select.btn-secondary:active,
select.btn-secondary:hover,
select.btn-secondary:focus {
  /* need this because gulp compresses background-color to background and kills the image */
  background: var(--col-secondary-light) url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'%3e%3cpath fill='%23343a40' d='M2 0L0 2h4zm0 5L0 3h4z'/%3e%3c/svg%3e") no-repeat right .75rem center/12px 14px;
}

@media (max-width: 50rem) {
  select.btn-ghost,
  select.btn-primary,
  select.btn-secondary {
    padding-left: 0.5rem;
    padding-right: calc(0.5rem + 15px);
  }
}

select::-ms-expand {
	display: none;
}

select option {
	font-weight: normal;
  color: var(--col-text);
  background-color: var(--col-bg-light);
}

select[disabled] {
  cursor: not-allowed;
  outline: none;
}

[type="text"]:hover, [type="text"]:focus,
[type="search"]:hover, [type="search"]:focus,
[type="email"]:hover, [type="email"]:focus,
[type="number"]:hover, [type="number"]:focus,
[type="password"]:hover, [type="password"]:focus,
[type="tel"]:hover, [type="tel"]:focus,
[type="url"]:hover, [type="url"]:focus,
textarea:hover, textarea:focus,
select:hover, select:focus {
  outline: 0.2rem solid var(--col-link);
  outline-offset: 0.1rem;
}

input[aria-invalid='true']:hover, input[aria-invalid='true']:focus,
textarea[aria-invalid='true']:hover, textarea[aria-invalid='true']:focus {
  outline-color: var(--col-mes-danger-dark);
}

input[aria-invalid='false']:hover, input[aria-invalid='false']:focus,
textarea[aria-invalid='false']:hover, textarea[aria-invalid='false']:focus {
  outline-color: var(--col-mes-success-dark);
}

/* Support for rtl text, explicit support for Arabic and Hebrew */
*[dir="rtl"] select,
:root:lang(ar) select,
:root:lang(iw) select {
	background-position: left 0.7rem top 50%, 0 0;
}

/* required styles */
/* add to label */
.form-required::after {
  content: ' (required)';
}

/* Disabled styles */
select:disabled,
select[aria-disabled="true"] {
	color: var(--col-bg-med-dark);
	background-color: var(--col-bg-med-dark);
}

/* Search group */
.search {
  width: 100%;
  max-width: 50rem;
}

.search *,
.search input {
  margin: 0;
}

.input-group {
  position: relative;
  display: flex;
  flex-wrap: nowrap;
  align-items: stretch;
  width: 100%;
}

.input-group-prepend {
  margin-right: -1px;
}

.input-group-append,
.input-group-prepend {
  display: flex;
}

.input-group > .form-control {
  position: relative;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.form-control {
  display: block;
  background-color: #fff;
  background-clip: padding-box;
  border: 1px solid var(--col-text);
  height: calc(2.875rem + 2px);
  padding: 0.5rem 1rem;
  width:auto;
}

.input-group-append {
  margin-left: -1px;
}

.search button {
  height: calc(2.875rem + 2px);
  padding: 0.5rem 1rem;
  white-space: nowrap;
}

nav > .search {
  margin: 0.2rem 1.25rem;
}

@media (max-width: 50rem) {
  nav > .search {
    margin: 0 0.5rem;
  }
}

/*select.btn-secondary {
  background-color: var(--col-secondary);
}*/

/*select.btn-ghost {
  background-image: white;
}*/

@media (max-width: 40rem) {
  .visuallyhidden-mobile {
    border: 0;
    clip: rect(0 0 0 0);
    height: auto; /* new - was 1px */
    margin: 0; /* new - was -1px */
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap; /* 1 */
  }
}

/* toggles */
.toggle[type="checkbox"] {
  position: absolute;
  top: auto;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  width: 1px;
  height: 1px;
  white-space: nowrap;
}

.toggle[type="checkbox"] + label {
  display: block;
  position: relative;
  padding: 0.5rem;
  padding-left: 4rem;
  max-width: calc(100% - 2rem);
  /*transition: all 0.25s ease;*/
}

.toggle[type="checkbox"] + label::before,
.toggle[type="checkbox"] + label::after {
  content: "";
  position: absolute;
  height: 1.5rem;
}

.toggle[type="checkbox"] + label::before {
  left: 0;
  top: 0.25rem;
  width: 3rem;
  border: 0.2rem solid var(--col-bg-med-dark);
  background: var(--col-bg-med-dark);
  border-radius: 1.1rem;
}

.toggle[type="checkbox"] + label::after {
  left: 0;
  top: 0.25rem;
  background-position: center center;
  border-radius: 50%;
  width: 1.5rem;
  border: 0.15rem solid var(--col-bg-med-dark);
}

.toggle[type="checkbox"]:not(:checked) + label::after {
  background-color: #fff;
}

.toggle[type="checkbox"]:checked + label::before {
  border-color: var(--col-mes-success-dark);
  background: var(--col-mes-success-bg);
}

.toggle[type="checkbox"]:checked + label::after {
  left: 1.6rem;
  border-color: var(--col-mes-success-dark);
  color: var(--col-mes-success-bg);
  background-color: var(--col-mes-success-dark);
}

.toggle[type="checkbox"]:focus + label::before,
.toggle[type="checkbox"]:hover + label::before {
  border: 0.2rem solid var(--col-link);
}

.toggle[type="checkbox"]:focus + label::after,
.toggle[type="checkbox"]:hover + label::after {
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='50' cy='50' r='50' fill='rgba(0,0,0,.25)'/%3E%3C/svg%3E");
  background-size: 30%;
  background-repeat: no-repeat;
  background-position: center center;
}

.toggle[type="checkbox"][disabled] + label::before {
  background-color: transparent;
  border-color: var(--col-bg-medium);
}

.toggle[type="checkbox"][disabled] + label::after {
  border-color: var(--col-bg-medium);
}

.toggle[disabled]:hover + label {
  color: var(--col-bg-medium);
}

.toggle[type="checkbox"][disabled]:hover + label::before {
  box-shadow: none;
}

.toggle[type="checkbox"][disabled]:hover + label::after {
  background-image: none;
}

.toggle[type="checkbox"]:indeterminate + label::after {
  left: 0.8rem;
}

.toggle[type="checkbox"]:indeterminate + label::before {
  background-color: var(--col-bg-medium);
}

/* if text goes before toggle */
.toggle.flip[type="checkbox"] + label::before,
.toggle.flip[type="checkbox"] + label::after {
  left: auto;
  right: 0;
}

.toggle.flip[type="checkbox"] + label::after {
  left: auto;
  right: 1.6rem;
}

.toggle.flip[type="checkbox"]:checked + label::after {
  right: 0;
}

.toggle.flip[type="checkbox"]:indeterminate + label::after {
  right: 0.8rem;
}

.toggle.flip[type="checkbox"] + label {
  padding-left: 0;
  padding-right: 4rem;
}

@media screen and (-ms-high-contrast: active) {
  .toggle[type="checkbox"]:focus + label::before,
  .toggle[type="checkbox"]:hover + label::before {
    outline: 1px dotted windowText;
    outline-offset: 0.25rem;
  }

  .toggle[type="checkbox"] + label::after {
    background-color: windowText;
  }

  .toggle[type="checkbox"][disabled] + label::after {
    background-color: transparent;
  }
}

/* horizontal date fields */
.form-inline { /*this cannot be on a fieldset, flexbox doesn't work on them yet */
  display: flex;
  align-items: flex-start;
}

.form-date label {
  display: flex;
  flex-direction: column;
  margin-right: 1rem;
}

@media (max-width: 768px) {
  .form-date label {
    margin-right: 0;
  }
}

input[maxlength="2"],
input[size="2"] {
  width: calc(2ch + 2ch + 1ch + 2px); /* maxlength + padding + breathing space + border */
}

input[maxlength="3"],
input[size="3"] {
  width: calc(3ch + 2ch + 1ch + 2px); /* maxlength + padding + breathing space + border */
}

input[maxlength="4"],
input[size="4"] {
  width: calc(4ch + 2ch + 1ch + 2px); /* maxlength + padding + breathing space + border */
}

input[maxlength="5"],
input[size="5"] {
  width: calc(5ch + 2ch + 1ch + 2px); /* maxlength + padding + breathing space + border */
}

input[maxlength="10"],
input[size="10"] {
  width: calc(10ch + 2ch + 1ch + 2px); /* maxlength + padding + breathing space + border */
}

input[maxlength="12"],
input[size="12"] {
  width: calc(12ch + 2ch + 1ch + 2px); /* maxlength + padding + breathing space + border */
}

/* date range layout */
form .cards {
  grid-template-columns: repeat(auto-fit,minmax(14rem,1fr));
  grid-gap: 1rem;
}

form .cards > button {
  height: 1rem;
  align-self: center;
}

/* Progress indicator */
/* https://codepen.io/chopfitzroy/pen/mVeKRN */
ol[role="progressbar"] {
  margin: 0 0 calc(var(--m-norm) * 1rem);
  padding: 0;
  counter-reset: counter;
  list-style: none; /* find the accessible alternative */
}

ol[role="progressbar"] li {
  margin: 0.5rem 0;
}

ol[role="progressbar"] li::before {
  content: counter(counter);
  counter-increment: counter;
  float: left;
  display: inline-block;
  margin-right: -50px;
  width: 50px;
  height: 50px;
  border-radius: 100%;
  color: #fff;
  text-align: center;
  font-size: 1.3rem;
  line-height: 1.3;
  padding: 0.6rem 0;
  background-color: var(--col-mes-success-dark);
}

ol[role="progressbar"] li a,
ol[role="progressbar"] li span {
  text-decoration: none;
  display: inline-block;
  padding: 1rem 4rem;
}

ol[role="progressbar"] li[aria-current="step"]::before {
  background-color: var(--col-mes-info-dark);
}

ol[role="progressbar"] li[aria-current="step"]::after {
  background-color: var(--col-bg-medium);
}

ol[role="progressbar"] li[aria-current="step"] ~ li::before {
  background-color: var(--col-bg-med-dark);
}

@media (min-width: 768px) {
  ol[role="progressbar"] {
    display: flex;
    flex-wrap: wrap;
  }

  [role="progressbar"] li[aria-current] {
    background: none;
    color: inherit;
  }

  ol[role="progressbar"] li {
    width: calc(100% / 4);
    position: relative;
  }

  ol[role="progressbar"] li::before {
    float: none;
    margin-right: 0;
  }

  ol[role="progressbar"] li::after {
    content: "";
    display: inline-block;
    position: absolute;
    top: 25px;
    left: 45px;
    transform: translateY(-50%);
    height: 15px;
    width: calc(100% - 40px);
    margin-left: 5px;
    background-color: var(--col-bg-medium);
  }

  ol[role="progressbar"] li:last-of-type::after {
    display: none;
  }

  ol[role="progressbar"] li a,
  ol[role="progressbar"] li span {
    display: block;
    padding: 0.5rem 0;
  }
}
